{
  "openapi": "3.0.3",
  "info": {
    "title": "Product Inventory API",
    "description": "API for Connecting to external point of Sales System and managing users",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "/api"
    }
  ],
  "tags": [
    {
      "name": "external",
      "description": "External API endpoints for Point of sales system"
    }
  ],
  "paths": {
    "/external/all_product": {
      "get": {
        "tags": [
          "external"
        ],
        "summary": "Get all products",
        "description": "Returns a list of all products with their current inventory levels",
        "operationId": "getAllProducts",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Products returned successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/ProductWithInventory"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/external/updateProduct": {
      "patch": {
        "tags": [
          "external"
        ],
        "summary": "Update product inventory after sale",
        "description": "Updates inventory levels and records sales data for specified products",
        "operationId": "updateProduct",
        "requestBody": {
          "description": "Sale information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "product_ids",
                  "amount_being_sold"
                ],
                "properties": {
                  "product_ids": {
                    "type": "array",
                    "description": "List of product IDs being sold",
                    "items": {
                      "type": "integer"
                    },
                    "example": [1]
                  },
                  "amount_being_sold": {
                    "type": "array",
                    "description": "List of quantities being sold (must match length of product_ids)",
                    "items": {
                      "type": "integer"
                    },
                    "example": [1]
                  },
                  "email": {
                    "type": "string",
                    "description": "Customer email for feedback request (optional)",
                    "example": "johndoe@something.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Sales processed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Sales processed successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid input",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error: product_ids and amount_being_sold must have same length"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error processing request"
                    },
                    "error": {
                      "type": "string",
                      "example": "Error details"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/external/getuser": {
      "get": {
        "tags": [
          "external"
        ],
        "summary": "Get all users",
        "description": "Returns a list of all users in the database",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "users returned successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/external/adduser": {
      "post": {
        "tags": [
          "external"
        ],
        "summary": "Add a new user",
        "description": "Creates a new user account and sends welcome email with credentials",
        "operationId": "addUser",
        "requestBody": {
          "description": "User information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "phone_no",
                  "hire_date",
                  "email"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's full name",
                    "example": "John Doe"
                  },
                  "phone_no": {
                    "type": "string",
                    "description": "User's phone number",
                    "example": "08012345678"
                  },
                  "hire_date": {
                    "type": "string",
                    "description": "Date when user was hired",
                    "example": "2023-01-15"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's email address (must be unique)",
                    "example": "johndoe@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User Added Successfully"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error adding supplier"
                    },
                    "error": {
                      "type": "string",
                      "example": "Error details"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "patch": {
        "tags": [
          "external"
        ],
        "summary": "Update user information",
        "description": "Updates an existing user's information",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "id",
            "in": "query",
            "description": "ID of the user to update",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "User information to update",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "description": "User's updated name",
                    "example": "John Smith"
                  },
                  "phone_no": {
                    "type": "string",
                    "description": "User's updated phone number",
                    "example": "08087654321"
                  },
                  "hire_date": {
                    "type": "string",
                    "description": "User's updated hire date",
                    "example": "2023-02-15"
                  },
                  "email": {
                    "type": "string",
                    "description": "User's updated email address (must be unique)",
                    "example": "johnsmith@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User updated successfully"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Field 'name' cannot be empty"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          },
          "409": {
            "description": "Conflict",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email must be unique"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error updating user"
                    },
                    "error": {
                      "type": "string",
                      "example": "Error details"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/external/deluser": {
      "delete": {
        "tags": [
          "external"
        ],
        "summary": "Delete a user",
        "description": "Removes a user from the system",
        "operationId": "deleteUser",
        "requestBody": {
          "description": "User information",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "description": "Email of the user to delete",
                    "example": "johndoe@example.com"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Manager deleted successfully"
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Error deleting manager"
                    },
                    "error": {
                      "type": "string",
                      "example": "Error details"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ProductWithInventory": {
        "type": "object",
        "properties": {
          "product_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "product_name": {
            "type": "string",
            "example": "Product Name"
          },
          "current_stock": {
            "type": "integer",
            "format": "int32",
            "example": 100
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "user_id": {
            "type": "integer",
            "format": "int64",
            "example": 1
          },
          "user_name": {
            "type": "string",
            "example": "John Doe"
          },
          "user_email": {
            "type": "string",
            "format": "email",
            "example": "johndoe@example.com"
          }
        }
      }
    }
  }
}